Array is a linear data structure and memory are reserved continuously but linked list is not.
Arraylist Store items continuously.

  Fixed size arrays and pre allocated memory.
  Insertion / deletion in the beginning is costly.
  Implementation of Stack and queue is difficult as insertion / deltion.


Linked List
-----------
NO need for contiguous memory allocation.
No need to prereserve space.
Insertion and deletion can happen in the middle and not costly.
Self Referential data structure

Traversing a linked list
------------------------
Time Complexity is O(n)

1. Print using While Loop ->  O(n)
2. Print using Iteration  ->  O(n)
3. Insert at the beginning => Time Complexisty is O(1)
4. Insert at the End => Traverse to the end and then add the node => O(n)
		Special case when head is null that means new node will become the head.
5. Deleting from head i.e. Changing the head pointer to next. Time Complexity O(1)
6. Deleting from tail is O(n) 